{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport data from \"../data\";\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: data,\n  reducers: {\n    login(state, action) {\n      let username = action.payload.username;\n      let password = action.payload.password;\n      let userDatas = state.user.array;\n\n      for (let i = 0; i < userDatas.length; i++) {\n        let user = userDatas[i];\n\n        if (user.username === username) {\n          if (user.password === password) {\n            state.auth.loginMessage = \"Successfully Logged In !\";\n            state.auth.username = user.username;\n            state.auth.userID = user.userId;\n            state.auth.isSuper = user.isSuper;\n            state.auth.isLoggedIn = true; //TODO: Navigate MainPage\n\n            break;\n          } else {\n            state.auth.loginMessage = \"Username or Password Wrong !\";\n          }\n        } else {\n          state.auth.loginMessage = \"Username or Password Wrong !\";\n        }\n      }\n    },\n\n    register(state, action) {\n      let username = action.payload.username;\n      let email = action.payload.email;\n      let password = action.payload.password;\n      let repassword = action.payload.repassword;\n\n      if (password !== repassword) {\n        state.auth.registerMessage = \"Password must be same with RePassword !\";\n        return;\n      }\n\n      let userDatas = state.user.array;\n      let foundFlag = false;\n\n      for (let i = 0; i < userDatas.length; i++) {\n        let user = userDatas[i];\n\n        if (user.username === username || user.email === email) {\n          foundFlag = true;\n          break;\n        }\n      }\n\n      if (foundFlag) {\n        state.auth.registerMessage = \"Username Or Email Already Taken !\";\n      } else {\n        let userData = {\n          username: username,\n          password: password,\n          userId: state.user.userCount,\n          isSuper: false //TODO: Is super eklenecek\n\n        };\n        state.user.array = [...state.user.array, userData];\n        state.user.userCount = state.user.userCount + 1;\n        console.log(userData);\n      }\n    },\n\n    addField(state, action) {\n      state.fields.count += 1;\n      state.fields.array.push({ ...action.payload\n      });\n    },\n\n    removeField(state, action) {},\n\n    updateField(state, action) {\n      let fieldArray = [...state.fields.array];\n      fieldArray[action.payload.id] = { ...action.payload.field\n      };\n      state.fields.array = [...fieldArray];\n    },\n\n    fieldFilter(state, action) {\n      state.filter = { ...action.payload\n      };\n    },\n\n    addBooking(state, action) {},\n\n    removeBooking(state, action) {}\n\n  }\n});\nexport const authAction = authSlice.actions;\nexport default authSlice;","map":{"version":3,"names":["createSlice","data","authSlice","name","initialState","reducers","login","state","action","username","payload","password","userDatas","user","array","i","length","auth","loginMessage","userID","userId","isSuper","isLoggedIn","register","email","repassword","registerMessage","foundFlag","userData","userCount","console","log","addField","fields","count","push","removeField","updateField","fieldArray","id","field","fieldFilter","filter","addBooking","removeBooking","authAction","actions"],"sources":["/Users/beydasoyseven/Documents/GitHub/web-halisaha/src/Store/Auth/AuthSlice.js"],"sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\nimport data from \"../data\";\n\nconst authSlice = createSlice({\n    name: 'auth',\n    initialState: data,\n    reducers:{\n        login(state, action){\n            let username = action.payload.username;\n            let password = action.payload.password;\n\n            let userDatas = state.user.array;\n            for (let i = 0; i < userDatas.length; i++) {\n                let user = userDatas[i];\n                if (user.username === username){\n                    if (user.password === password){\n                        state.auth.loginMessage = \"Successfully Logged In !\";\n                        state.auth.username = user.username;\n                        state.auth.userID = user.userId;\n                        state.auth.isSuper = user.isSuper;\n                        state.auth.isLoggedIn = true;\n                        //TODO: Navigate MainPage\n                        break;\n                    }else{\n                        state.auth.loginMessage = \"Username or Password Wrong !\";\n                    }\n                }else{\n                    state.auth.loginMessage = \"Username or Password Wrong !\";\n                }\n            }\n        },\n        register(state, action){\n            let username = action.payload.username;\n            let email = action.payload.email;\n            let password = action.payload.password;\n            let repassword = action.payload.repassword;\n\n            if  (password !== repassword) {\n                state.auth.registerMessage = \"Password must be same with RePassword !\"\n                return;\n            }\n\n            let userDatas = state.user.array;\n\n            let foundFlag = false;\n            for (let i = 0; i < userDatas.length; i++) {\n                let user = userDatas[i];\n                if (user.username === username || user.email === email) {\n                    foundFlag = true;\n                    break;\n                }\n            }\n\n            if (foundFlag) {\n                state.auth.registerMessage = \"Username Or Email Already Taken !\";\n            }else{\n                let userData = {\n                    username:username,\n                    password:password,\n                    userId: state.user.userCount,\n                    isSuper: false,\n                    //TODO: Is super eklenecek\n                }\n                state.user.array = [...state.user.array,userData];\n                state.user.userCount = state.user.userCount+1;\n                console.log(userData);\n            }\n\n        },\n        addField(state, action){\n            state.fields.count += 1;\n            state.fields.array.push({...action.payload});\n        },\n        removeField(state, action){\n\n        },\n        updateField(state, action){\n            let fieldArray = [...state.fields.array];\n            fieldArray[action.payload.id] = {...action.payload.field};\n            state.fields.array = [...fieldArray];\n        },\n        fieldFilter(state, action){\n            state.filter = {...action.payload};\n        },\n        addBooking(state, action) {\n\n        },\n        removeBooking(state, action){\n\n        }\n    }\n});\n\nexport const authAction = authSlice.actions;\n\nexport default authSlice;"],"mappings":"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"},"metadata":{},"sourceType":"module"}